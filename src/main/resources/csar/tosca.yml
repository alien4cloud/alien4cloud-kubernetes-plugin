tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.kubernetes.api
  template_version: 2.1.0-SNAPSHOT
  # this version will be changed at build time (see maven-replacer-plugin in pom.xml)
  template_author: alien4cloud

description: |
  Kubernetes types that fit to K8S api, used by K8S topology modifiers and describe K8S matchable resources ; modified for Jobs support.

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  # these versions will be changed at build time (see maven-replacer-plugin in pom.xml)
  - docker-types:2.1.0-SNAPSHOT
  - alien-base-types:2.1.0-SNAPSHOT

data_types:

  # org.alien4cloud.extended.container.data.Deployment:
  #   derived_from: tosca.datatypes.Root
  #   description: |
  #     c.f. https://kubernetes.io/docs/api-reference/v1.6/#deployment-v1beta1-apps
  #   properties:
  #     apiVersion:
  #       type: string
  #       description: |
  #         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
  #     kind:
  #       type: string
  #       description: |
  #         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  #     metadata:
  #       type: ObjectMeta
  #       description: |
  #         Standard object metadata.
  #     spec:
  #       type: org.alien4cloud.kubernetes.api.datatypes.DeploymentSpec
  #       description: |
  #         Specification of the desired behavior of the Deployment

  org.alien4cloud.kubernetes.api.datatypes.LocalObjectReference:
    derived_from: tosca.datatypes.Root
    properties:
      name:
        type: string

  org.alien4cloud.kubernetes.api.datatypes.ServicePort:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#serviceport-v1-core
    properties:
      name:
        type: string
        description: |
          The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.
      nodePort:
        type: integer
        description: |
          The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport
        required: false
      port:
        type: integer
        description: |
          The port that will be exposed by this service.
        required: false
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      protocol:
        type: string
        description: |
          The IP protocol for this port. Supports "TCP" and "UDP". Default is TCP.
        default: TCP
        constraints:
          valid_values: [ 'TCP', 'UDP' ]
      targetPort:
        type: string
        description: |
          Perhaps more interesting is that targetPort can be a string, referring to the name of a port in the backend Pods.
        required: false

  org.alien4cloud.kubernetes.api.datatypes.EndpointSubsets:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#endpointsubset-v1-core
    properties:
      addresses:
        type: list
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.IP
      ports:
        type: list
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.Port

  org.alien4cloud.kubernetes.api.datatypes.IP:
    derived_from: tosca.datatypes.Root
    properties:
      ip:
        type: string

  org.alien4cloud.kubernetes.api.datatypes.Port:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#endpointport-v1-core
    properties:
#      name:
#        type: string
      port:
        type: integer
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      protocol:
        type: string
        default: TCP
        description: |
          Protocol for port. Must be UDP or TCP. Defaults to "TCP".
        constraints:
          - valid_values: [TCP, UDP]

  org.alien4cloud.kubernetes.api.datatypes.ServiceSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#servicespec-v1-core
    properties:
      clusterIP:
        type: string
        required: false
        description: |
          clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
      deprecatedPublicIPs:
        type: string
        required: false
        description: |
          array  deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics. This field is retained in the v1 API for compatibility until at least 8/20/2016. It will be removed from any new API revisions. If both deprecatedPublicIPs and externalIPs are set, deprecatedPublicIPs is used.
      externalIPs:
        type: string
        required: false
        description: |
          array  externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system. A previous form of this functionality exists as the deprecatedPublicIPs field. When using this field, callers should also clear the deprecatedPublicIPs field.
      externalName:
        type: string
        required: false
        description: |
          externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName.
      loadBalancerIP:
        type: string
        required: false
        description: |
          Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
      loadBalancerSourceRanges:
        type: string
        required: false
        description: |
          array  If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: http://kubernetes.io/docs/user-guide/services-firewalls
      ports:
        type: list
        required: false
        description: |
          The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.ServicePort
      selector:
        type: map
        required: false
        entry_schema:
          type: string
        description: |
          Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview
      sessionAffinity:
        type: string
        required: false
        description: |
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies
      # TODO: initally 'type'
      service_type:
        type: string
        required: false
        description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview
        constraints:
          valid_values: [ 'ExternalName', 'ClusterIP', 'NodePort', 'LoadBalancer' ]

  org.alien4cloud.kubernetes.api.datatypes.ControllerSpec:
    derived_from: tosca.datatypes.Root
    description: >
      Used to provied template of PodTemplateSpec to controllers as Job, Deployment, and in the future, StatefulSet
    properties:
      template:
        type: org.alien4cloud.kubernetes.api.datatypes.PodTemplateSpec
        required: false
        description: |
          Template describes the pods that will be created.

  org.alien4cloud.kubernetes.api.datatypes.DeploymentSpec:
    derived_from: org.alien4cloud.kubernetes.api.datatypes.ControllerSpec
    description: >
      c.f. https://kubernetes.io/docs/api-reference/v1.6/#deploymentspec-v1beta1-apps
    properties:
      minReadySeconds:
        type: integer
        required: false
        description: |
          Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
      paused:
        type: boolean
        required: false
        description: |
          Indicates that the deployment is paused.
      progressDeadlineSeconds:
        type: integer
        required: false
        description: |
          The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Once autoRollback is implemented, the deployment controller will automatically rollback failed deployments. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
      replicas:
        type: integer
        required: false
        description: |
          Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
      revisionHistoryLimit:
        type: integer
        required: false
        description: |
          The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.
      rollbackTo:
        type: string # datetype: RollbackConfig
        required: false
        description: |
          The config this deployment is rolling back to. Will be cleared after rollback is done.
      selector:
        type: string # datetype: org.alien4cloud.kubernetes.api.datatypes.LabelSelector
        required: false
        description: |
          Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.
      strategy:
        type: string # datetype: DeploymentStrategy
        required: false
        description: |
          The deployment strategy to use to replace existing pods with new ones.

  # in version 1.10 there is another property : backoffLimit (integer) that specifies the number of retries before making this job failed (set to 6 by default)
  org.alien4cloud.kubernetes.api.datatypes.JobSpec:
    derived_from: org.alien4cloud.kubernetes.api.datatypes.ControllerSpec
    description: >
      c.f. https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#jobspec-v1-batch
    properties:
      activeDeadlineSeconds:
        type: integer
        required: false
        description: |
          Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
      completions:
        type: integer
        required: false
        description: |
          Completions specifies the desired number of successfully finished pods the job should be run with.
      manualSelector:
        type: boolean
        required: false
        description: |
          ManualSelector controls generation of pod labels and pod selectors. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.
      parallelism:
        type: integer
        required: false
        description: |
          Parallelism specifies the maximum desired number of pods the job should run at any given time.
      selector:
        type: string # datetype: org.alien4cloud.kubernetes.api.datatypes.LabelSelector
        required: false
        description: |
          Label query over pods that should match the pod count. Normally, the system sets this field for you

  org.alien4cloud.kubernetes.api.datatypes.PodTemplateSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#podtemplatespec-v1-core
      For instance:
        metadata:
          labels:
            app: nginx
    properties:
      metadata:
        type: org.alien4cloud.kubernetes.api.datatypes.Metadata
        required: false
        description: |
          Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.PodSpec
        required: false
        description: |
          Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status

  org.alien4cloud.kubernetes.api.datatypes.Metadata:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#podtemplatespec-v1-core
      For instance:
        metadata:
          labels:
            app: nginx
    properties:
      labels:
        type: map
        required: false
        entry_schema:
          type: string
      annotations:
        type: map
        required: false
        entry_schema:
          type: string

  org.alien4cloud.kubernetes.api.datatypes.PodSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#podtspec-v1-core
    properties:
      activeDeadlineSeconds:
        type: integer
        required: false
        description: |
          Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
      affinity:
        type: org.alien4cloud.kubernetes.api.datatypes.Affinity
        required: false
        description: |
           If specified, the pod's scheduling constraints
      automountServiceAccountToken:
        type: boolean
        required: false
        description: |
          AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
      # containers:
      #   type: Container
      #   description: |
      #     array List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
      dnsPolicy:
        type: string
        required: false
        description: |
           Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
      hostIPC:
        type: boolean
        required: false
        description: |
          Use the host's ipc namespace. Optional: Default to false.
      hostNetwork:
        type: boolean
        required: false
        description: |
          Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
      hostPID:
        type: boolean
        required: false
        description: |
          Use the host's pid namespace. Optional: Default to false.
      hostname:
        type: string
        required: false
        description: |
           Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
      imagePullSecrets:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.LocalObjectReference
        description: |
          ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
      initContainers:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        required: false
        description: |
          array List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
      nodeName:
        type: string
        required: false
        description: |
           NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
      nodeSelector:
        type: map
        required: false
        entry_schema:
          type: string
        description: |
           NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      restartPolicy:
        type: string
        required: false
        description: |
           Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy
      schedulerName:
        type: string
        required: false
        description: |
           If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
      # securityContext:
      #   type: PodSecurityContext
      #   description: |
      #      SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.
      serviceAccount:
        type: string
        required: false
        description: |
           DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
      serviceAccountName:
        type: string
        required: false
        description: |
           ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md
      subdomain:
        type: string
        required: false
        description: |
           If specified, the fully qualified Pod hostname will be "...svc.". If not specified, the pod will not have a domainname at all.
      terminationGracePeriodSeconds:
        type: integer
        required: false
        description: |
          Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
      # tolerations:
      #   type: Toleration
      #   description: |
      #     array  If specified, the pod's tolerations. More info: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
      # volumes:
      #   type: Volume
      #   description: |
      #     array  List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes

  org.alien4cloud.kubernetes.api.datatypes.ContainerPort:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#containerport-v1-core
    properties:
      containerPort:
        type: integer
        description: |
          Number of port to expose on the pod's IP address.
        required: true
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      name:
        type: string
        required: false
        description: |
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
      hostIP:
        type: string
        required: false
        description: |
          What host IP to bind the external port to.
      hostPort:
        type: integer
        description: |
          Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
        required: false
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      protocol:
        type: string
        required: false
        default: TCP
        description: |
          Protocol for port. Must be UDP or TCP. Defaults to "TCP".
        constraints:
          - valid_values: [TCP, UDP]

  org.alien4cloud.kubernetes.api.datatypes.ContainerEnv:
    derived_from: tosca.datatypes.Root
    properties:
      name:
        type: string
        required: true
      value:
        type: string
        required: true

  org.alien4cloud.kubernetes.api.datatypes.Lifecycle:
    derived_from: tosca.datatypes.Root
    description: |
      Lifecycle describes actions that the management system should take in response to container lifecycle events.
      For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    properties:
      postStart:
        type: org.alien4cloud.kubernetes.api.datatypes.Handler
        description: |
          PostStart is called immediately after a container is created.
          If the handler fails, the container is terminated and restarted according to its restart policy.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
        required: false
      preStop:
        type: org.alien4cloud.kubernetes.api.datatypes.Handler
        description: |
          PreStop is called immediately before a container is terminated.
          The container is terminated after the handler completes.
          The reason for termination is passed to the handler.
          Regardless of the outcome of the handler, the container is eventually terminated.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
        required: false

  org.alien4cloud.kubernetes.api.datatypes.Handler:
    derived_from: tosca.datatypes.Root
    description: |
      Handler defines a specific action that should be taken.
      One and only one of the following should be specified.
    properties:
      exec:
        type: org.alien4cloud.kubernetes.api.datatypes.ExecAction
        description: Exec specifies the action to take.
        required: false
      httpGet:
        type: org.alien4cloud.kubernetes.api.datatypes.HTTPGetAction
        required: false
        description: |
          HTTPGet specifies the http request to perform.
      tcpSocket:
        type: org.alien4cloud.kubernetes.api.datatypes.TCPSocketAction
        required: false
        description: |
          TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported

  org.alien4cloud.kubernetes.api.datatypes.ExecAction:
    derived_from: tosca.datatypes.Root
    properties:
      command:
        type: list
        required: false
        description: |
          Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem.
          The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work.
          To use a shell, you need to explicitly call out to that shell.
          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
        entry_schema:
          type: string

  org.alien4cloud.kubernetes.api.datatypes.HTTPHeader:
    derived_from: tosca.datatypes.Root
    description: HTTPHeader describes a custom header to be used in HTTP probes
    properties:
      name:
        type: string
        description: The header field name
      value:
        type: string
        description: The header field value

  org.alien4cloud.kubernetes.api.datatypes.HTTPGetAction:
    derived_from: tosca.datatypes.Root
    description: HTTPGetAction describes an action based on HTTP Get requests.
    properties:
      host:
        type: string
        required: false
        description: |
          Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
      httpHeaders:
        type: list
        required: false
        description: |
          Custom headers to set in the request. HTTP allows repeated headers.
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.HTTPHeader
      path:
        type: string
        required: false
        description: |
          Path to access on the HTTP server.
      port:
        type: integer
        description: |
          Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        required: false
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      scheme:
        type: string
        required: false
        description: |
          Scheme to use for connecting to the host. Defaults to HTTP.

  org.alien4cloud.kubernetes.api.datatypes.TCPSocketAction:
    derived_from: tosca.datatypes.Root
    description: TCPSocketAction describes an action based on opening a socket
    properties:
      host:
        type: string
        required: false
        description: |
          Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
      port:
        type: integer
        description: |
          Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        required: false
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535

  org.alien4cloud.kubernetes.api.datatypes.Probe:
    derived_from: tosca.datatypes.Root
    description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    properties:
      exec:
        type: org.alien4cloud.kubernetes.api.datatypes.ExecAction
        required: false
        description: |
          Exec specifies the action to take.
      httpGet:
        type: org.alien4cloud.kubernetes.api.datatypes.HTTPGetAction
        required: false
        description: |
          HTTPGet specifies the http request to perform.
      tcpSocket:
        type: org.alien4cloud.kubernetes.api.datatypes.TCPSocketAction
        required: false
        description: |
          TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
      failureThreshold:
        type: integer
        required: false
#        default: 3
        constraints:
          - greater_or_equal: 1
        description: |
          Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
      initialDelaySeconds:
        type: integer
        required: false
        description: |
          Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
      periodSeconds:
        type: integer
        required: false
#        default: 10
        constraints:
          - greater_or_equal: 1
        description: |
          How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
      successThreshold:
        type: integer
        required: false
#        default: 1
        constraints:
          - greater_or_equal: 1
        description: |
          Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
      timeoutSeconds:
        type: integer
        required: false
#        default: 1
        constraints:
          - greater_or_equal: 1
        description: |
          Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

  org.alien4cloud.kubernetes.api.datatypes.ContainerSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#container-v1-core
    properties:
      args:
        type: list
        required: false
        entry_schema:
          type: string
        description: |
          array  Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      command:
        type: list
        required: false
        description: |
          Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
        entry_schema:
          type: string
      env:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.ContainerEnv
        description: |
          List of environment variables to set in the container. Cannot be updated.
      # envFrom:
      #   type: EnvFromSource
      #   description: |
      #     array List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
      image:
        type: string
        required: false
        description: |
          Docker image name. More info: http://kubernetes.io/docs/user-guide/images
      imagePullPolicy:
        type: string
        required: false
        default: Always
        constraints:
          - valid_values: [Always, Never, IfNotPresent]
        description: |
          Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images
      lifecycle:
        type: org.alien4cloud.kubernetes.api.datatypes.Lifecycle
        description: |
          Actions that the management system should take in response to container lifecycle events. Cannot be updated.
        required: false
      livenessProbe:
        type: org.alien4cloud.kubernetes.api.datatypes.Probe
        required: false
        description: |
          Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      name:
        type: string
        required: false
        description: |
          Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
      ports:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.ContainerPort
        description: |
          array List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
      readinessProbe:
        type: org.alien4cloud.kubernetes.api.datatypes.Probe
        required: false
        description: |
          Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      resources:
        type: org.alien4cloud.kubernetes.api.datatypes.ResourceRequirements
        required: false
        description: |
          Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/concepts/storage/persistent-volumes/#resources
      # securityContext:
      #   type: SecurityContext
      #   description: |
      #     Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md
      stdin:
        type: boolean
        required: false
        description: |
          Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
      stdinOnce:
        type: boolean
        required: false
        description: |
          Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
      terminationMessagePath:
        type: string
        required: false
        description: |
          Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
      terminationMessagePolicy:
        type: string
        required: false
        description: |
          Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
      tty:
        type: boolean
        required: false
        description: |
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
      volumeMounts:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.VolumeMount
        description: |
          array Pod volumes to mount into the container's filesystem. Cannot be updated.
      workingDir:
        type: string
        required: false
        description: |
          Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.

  org.alien4cloud.kubernetes.api.datatypes.VolumeMount:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#volumemount-v1-core
    properties:
      mountPath:
        type: string
      name:
        type: string
      subPath:
        type: string
        description: |
          Path within the volume from which the container's volume should be mounted. Defaults to '' (volume's root).
        required: false
      readOnly:
        type: boolean
        description: |
          Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
        default: false
        required: false

  org.alien4cloud.kubernetes.api.datatypes.ResourceRequirements:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#resourcerequirements-v1-core
    properties:
      limits:
        type: org.alien4cloud.kubernetes.api.datatypes.ResourceRequest
        required: false
        description: |
          Limits describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      requests:
        type: org.alien4cloud.kubernetes.api.datatypes.ResourceRequest
        required: false
        description: |
          Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

  org.alien4cloud.kubernetes.api.datatypes.ResourceRequest:
    derived_from: tosca.datatypes.Root
    properties:
      memory:
        type: scalar-unit.size
        required: false
      cpu:
        type: float
        required: false
      nvidia.com/gpu:
        type: integer
        required: false

  org.alien4cloud.kubernetes.api.datatypes.Affinity:
    derived_from: tosca.datatypes.Root
    properties:
      nodeAffinity:
        type: org.alien4cloud.kubernetes.api.datatypes.NodeAffinity
        description: |
          Describes node affinity scheduling rules for the pod (e.g put this pod in any node matching a provided expression of labels / values couple).
      # podAffinity:
      #   type: PodAffinity
      #   description: |
      #     Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
      podAntiAffinity:
        type: org.alien4cloud.kubernetes.api.datatypes.PodAntiAffinity
        description: |
          Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

  org.alien4cloud.kubernetes.api.datatypes.NodeAffinity:
    derived_from: tosca.datatypes.Root
    description: |
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#nodeaffinity-v1-core
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        required: false
        type: list
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.PreferredSchedulingTerm

  org.alien4cloud.kubernetes.api.datatypes.PreferredSchedulingTerm:
    derived_from: tosca.datatypes.Root
    description: |
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#preferredschedulingterm-v1-core
    properties:
      preference:
        required: false
        description: |
          A node selector term, associated with the corresponding weight
        type: org.alien4cloud.kubernetes.api.datatypes.NodeSelectorTerm
      weight:
        type: integer
        required: false
        description: |
          Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.

  org.alien4cloud.kubernetes.api.datatypes.NodeSelectorTerm: ## actually the same as org.alien4cloud.kubernetes.api.datatypes.LabelSelector ?
    derived_from: tosca.datatypes.Root
    description: |
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#nodeselectorterm-v1-core
    properties:
      matchExpressions:
        type: list
        description: |
          matchExpressions is a list of node selector requirements. The requirements are ANDed.
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.NodeSelectorRequirement  ## actually the same as org.alien4cloud.kubernetes.api.datatypes.LabelSelectorRequirement ?

  org.alien4cloud.kubernetes.api.datatypes.NodeSelectorRequirement:
    derived_from: tosca.datatypes.Root
    properties:
      key:
        type: string
        required: false
        description: |
          key is the label key that the selector applies to.
      operator:
        type: string
        required: false
        description: |
          operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.
      values:
        type: list
        required: false
        description: |
          values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
        entry_schema:
          type: string

  org.alien4cloud.kubernetes.api.datatypes.PodAntiAffinity:
    derived_from: tosca.datatypes.Root
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        required: false
        type: list
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.WeightedPodAffinityTerm

  org.alien4cloud.kubernetes.api.datatypes.WeightedPodAffinityTerm:
    derived_from: tosca.datatypes.Root
    properties:
      podAffinityTerm:
        type: org.alien4cloud.kubernetes.api.datatypes.PodAffinityTerm
        required: false
        description: |
          A node selector term, associated with the corresponding weight.
      weight:
        type: integer
        required: false
        description: |
          Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.

  org.alien4cloud.kubernetes.api.datatypes.PodAffinityTerm:
    derived_from: tosca.datatypes.Root
    properties:
      labelSelector:
        type: org.alien4cloud.kubernetes.api.datatypes.LabelSelector
        required: false
        description: |
          A label query over a set of resources, in this case pods.
      namespaces:
        type: list
        description: |
          namespaces specifies which namespaces the org.alien4cloud.kubernetes.api.datatypes.LabelSelector applies to (matches against); nil list means "this pod's namespace," empty list means "all namespaces" The json tag here is not "omitempty" since we need to distinguish nil and empty. See https://golang.org/pkg/encoding/json/#Marshal for more details.
        entry_schema:
          type: string
      topologyKey:
        type: string
        description: |
          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the org.alien4cloud.kubernetes.api.datatypes.LabelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as "all topologies" ("all topologies" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed.

  org.alien4cloud.kubernetes.api.datatypes.LabelSelector:
    derived_from: tosca.datatypes.Root
    properties:
      matchExpressions:
        type: list
        required: false
        description: |
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.org.alien4cloud.kubernetes.api.datatypes.LabelSelectorRequirement
      # matchLabels:
      #   type: object
      #   description: |
      #     matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.

  org.alien4cloud.kubernetes.api.datatypes.org.alien4cloud.kubernetes.api.datatypes.LabelSelectorRequirement:
    derived_from: tosca.datatypes.Root
    properties:
      key:
        type: string
        required: false
        description: |
          key is the label key that the selector applies to.
      operator:
        type: string
        required: false
        description: |
          operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.
      values:
        type: list
        required: false
        description: |
          values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
        entry_schema:
          type: string

  org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerScaleTargetRef:
    derived_from: tosca.datatypes.Root
    description: |
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#crossversionobjectreference-v2alpha1-autoscaling
    properties:
      apiVersion:
        type: string
      kind:
        type: string
        description: |
          see https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
      name:
        type: string

  org.alien4cloud.kubernetes.api.datatypes.autoscaler.ResourceMetricSource:
    derived_from: tosca.datatypes.Root
    description: |
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#resourcemetricsource-v2alpha1-autoscaling
    properties:
      name:
        type: string
        required: false
      targetAverageUtilization:
        type: integer
        description: |
          Target average of the resource metric in term on percentage.
          Required if targetAverageValue is not set.
        required: false
      targetAverageValue:
        type: integer
        description: |
          Target average of the resource metric in term on raw value.
          Required if targetAverageUtilization is not set.
        required: false

  org.alien4cloud.kubernetes.api.datatypes.autoscaler.MetricSpec:
    derived_from: tosca.datatypes.Root
    description: >
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#metricspec-v2alpha1-autoscaling
    properties:
      type:
        type: string
        description: type is the type of metric source. It should match one of the fields below.
        default: Resource
        required: false
        constraints:
          - valid_values: [ Resource ]
      resource:
        type: org.alien4cloud.kubernetes.api.datatypes.autoscaler.ResourceMetricSource
        description: |
          resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes
          describing each pod in the current scale target (e.g. CPU or memory).
        required: false

  org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerSpec:
    derived_from: tosca.datatypes.Root
    description: >
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#horizontalpodautoscalerspec-v2alpha1-autoscaling
    properties:
      # scaleTargetRef:
      #   type: org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerScaleTargetRef
      #   required: false
      minReplicas:
        type: integer
        required: false
      maxReplicas:
        type: integer
        required: false
      metrics:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.autoscaler.MetricSpec
        description: |
          metrics contains the specifications for which to use to calculate
          the desired replica count (the maximum replica count across all metrics will be used).
          The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.
          Ergo, metrics used must decrease as the pod count is increased, and vice-versa.
          See the individual metric source types for more information about how each type of metric must respond

  org.alien4cloud.kubernetes.api.datatypes.volumes.EmptyDirVolumeSpec:
    derived_from: tosca.datatypes.Root
    properties:
      medium:
        type: string
        description: |
          What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
        required: false
        constraints:
          - valid_values: [Memory]
      sizeLimit:
        type: string
        description: |
          Total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium.
          The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined.
          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
        required: false

  org.alien4cloud.kubernetes.api.datatypes.volumes.HostPathVolumeSpec:
    derived_from: tosca.datatypes.Root
    properties:
      path:
        type: string
        description: |
          Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
# FIXME: type can't be used as a property name
#      type:
#        type: string
#        required: false
#        description: |
#          Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
#        required: false
#        constraints:
#          - valid_values: [DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice, BlockDevice]

  org.alien4cloud.kubernetes.api.datatypes.volumes.AWSElasticBlockStoreVolumeSpec:
    derived_from: tosca.datatypes.Root
    properties:
      fsType:
        type: string
        required: false
        description: |
          Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
      partition:
        type: integer
        required: false
        description: |
          The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
      readOnly:
        type: boolean
        required: false
        description: |
          Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
        default: false
      volumeID:
        type: string
        description: |
          Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore

  org.alien4cloud.kubernetes.api.datatypes.volumes.PersistentVolumeClaimSpec:
    derived_from: tosca.datatypes.Root
    properties:
      claimName:
        type: string
        required: false
        description: |
          ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
      readOnly:
        type: boolean
        required: false
        description: |
          Will force the ReadOnly setting in VolumeMounts. Default false.
        default: false

  org.alien4cloud.kubernetes.api.datatypes.volumes.ConfigMapVolumeSpec:
    derived_from: tosca.datatypes.Root
    properties:
      name:
        type: string
        description: |
          The name of the ConfigMap : You must create a ConfigMap before you can use it.
        constraints:
          - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
        required: true

  org.alien4cloud.kubernetes.api.datatypes.volumes.KeyToPath:
    derived_from: tosca.datatypes.Root
    properties:
      key:
        type: string
        description: |
          The key to project.
        required: true
      mode:
        type: integer
        description: |
          Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.        required: false
        required: false
        constraints:
          - greater_or_equal: 0
          - less_or_equal: 777
      path:
        type: string
        description: |
          The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
        required: true

  org.alien4cloud.kubernetes.api.datatypes.volumes.SecretVolumeSpec:
    derived_from: tosca.datatypes.Root
    description: see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#secretvolumesource-v1-core
    properties:
      defaultMode:
        type: integer
        description: |
          Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.        required: false
        required: false
        default: 644
        constraints:
          - greater_or_equal: 0
          - less_or_equal: 777
      items:
        type: list
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.volumes.KeyToPath
        required: false
      optional:
        type: boolean
        default: false
        description: |
          Specify whether the Secret or it's keys must be defined
      secretName:
        type: string
        description: |
          Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        required: true

node_types:

  # HOWTO: How about relationships and capabilities ?

  org.alien4cloud.kubernetes.api.types.ConfigMapFactory:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    description: |
      Component in charge of creating a configMap using a container (of type ConfigurableDockerContainer) inputs.
    properties:
      name:
        type: string
        description: |
          The name of the configMap
        constraints:
          - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      service_dependency_lookups:
        type: string
        required: false
        description: |
          A CSV key:value pairs where key should be replaced by the interpretation of value in the JSON.
          The value is the Kube name of the service for which the scheduler will need to find the ClusterIP and
          replace the key in the JSON with the found value.
      input_variables:
        type: map
        entry_schema:
          type: string
        description: |
          The variables names and values that should be replaced in the files
    interfaces:
      Standard:
        create:
          inputs:
            CONFIGMAP_NAME: { get_property: [SELF, name] }
            INPUT_VARIABLES: { get_property: [SELF, input_variables] }
            KUBE_SERVICE_DEPENDENCIES: { get_property: [SELF, service_dependency_lookups] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_configmap_create.sh
        delete:
          inputs:
            CONFIGMAP_NAME: { get_attribute: [SELF, name] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_configmap_delete.sh
    artifacts:
      - configs:
          file: configs
          type: tosca.artifacts.File

  org.alien4cloud.kubernetes.api.types.Base:
    abstract: true
    derived_from: tosca.nodes.Root
    description: |
          c.f. https://kubernetes.io/docs/api-reference/v1.6/#deployment-v1beta1-apps
    properties:
      apiVersion:
        type: string
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
      kind:
        type: string
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
        constraints:
          - valid_values: [Deployment, Service, HorizontalPodAutoscaler]
      metadata:
        type: map
        required: false
        entry_schema:
          type: string
        description: |
          Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata


  org.alien4cloud.kubernetes.api.types.volume.AbstractVolumeBase:
    abstract: true
    derived_from: tosca.nodes.Root
    description: |
      https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#volume-v1-core
    requirements:
      - attachment:
          capability: org.alien4cloud.capabilities.DockerVolumeAttachment
          relationship: org.alien4cloud.relationships.MountDockerVolume
          occurrences: [1, unbounded]
      - host:
          capability: tosca.capabilities.Container
          relationship: tosca.relationships.HostedOn
          occurrences: [1, 1]
    properties:
      name:
        type: string
      size:
        type: scalar-unit.size
        description: |
          The requested storage size (default unit is MB).

  org.alien4cloud.kubernetes.api.types.volume.VolumeBase:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.volume.AbstractVolumeBase
    properties:
      volume_type:
        type: string
        constraints:
          - valid_values: [emptyDir, hostPath, awsElasticBlockStore, persistentVolumeClaim, configMap]
      spec:
        type: tosca.datatypes.Root
        description: may be overriden by concrete implementations
        required: false

  org.alien4cloud.kubernetes.api.types.volume.AbstractArtifactVolumeBase:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.volume.AbstractVolumeBase
    description: |
      A volume linked to an artifact
    artifacts:
      - resources:
          type: tosca.artifacts.File
          file: README.md

  org.alien4cloud.kubernetes.api.types.volume.ArtifactVolumeBase:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.volume.AbstractArtifactVolumeBase
    properties:
      volume_type:
        type: string
        constraints:
          - valid_values: [secret]
      spec:
        type: tosca.datatypes.Root
        description: may be overriden by concrete implementations
        required: false
    artifacts:
      - resources:
          type: tosca.artifacts.File
          file: README.md

  org.alien4cloud.kubernetes.api.types.volume.EmptyDirVolumeSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.VolumeBase
    description: |
      An emptyDir volume is first created when a Pod is assigned to a Node, and exists as long as that Pod is running on that node.
      As the name says, it is initially empty.
      Containers in the pod can all read and write the same files in the emptyDir volume, though that volume can be mounted at the same or different paths in each container.
      When a Pod is removed from a node for any reason, the data in the emptyDir is deleted forever.
    properties:
      volume_type:
        type: string
        default: emptyDir
        constraints:
          - equal: emptyDir
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.EmptyDirVolumeSpec
        required: false

  org.alien4cloud.kubernetes.api.types.volume.HostPathVolumeSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.VolumeBase
    description: |
      HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.
      This is generally used for system agents or other privileged things that are allowed to see the host machine.
      Most containers will NOT need this.
      More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    properties:
      volume_type:
        type: string
        default: hostPath
        constraints:
          - equal: hostPath
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.HostPathVolumeSpec
        required: false

  org.alien4cloud.kubernetes.api.types.volume.AWSElasticBlockStoreVolumeSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.VolumeBase
    description: |
      AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.
      More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    properties:
      volume_type:
        type: string
        default: awsElasticBlockStore
        constraints:
          - equal: awsElasticBlockStore
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.AWSElasticBlockStoreVolumeSpec
        required: false

  org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.VolumeBase
    description: |
      PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    properties:
      volume_type:
        type: string
        default: persistentVolumeClaim
        constraints:
          - equal: persistentVolumeClaim
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.PersistentVolumeClaimSpec
        required: false
      accessModes:
        description: |
          AccessModes contains the desired access modes the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
        type: string
        default: ReadWriteOnce
        constraints:
          - valid_values: [ReadWriteOnce, ReadOnlyMany, ReadWriteMany]

  org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimStorageClassSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimSource
    description: |
      An extension of PersistentVolumeClaimSource that allows to specify a storageClass.
      If no volume that match this claim is found in the PersistentVolume pool, a volume will be allocated in the IAAS.
      When using this kind of volume, your Kube admin should ensure to have a storageClass defined in the cluster.
    properties:
      storageClassName:
        type: string
        default: default

  org.alien4cloud.kubernetes.api.types.volume.ConfigMapSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.VolumeBase
    description: |
      The configMap resource provides a way to inject configuration data into Pods.
      More info: https://kubernetes.io/docs/concepts/storage/#configmap
    properties:
      volume_type:
        type: string
        default: configMap
        constraints:
          - equal: configMap
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.ConfigMapVolumeSpec
        required: false

  org.alien4cloud.kubernetes.api.types.volume.SecretSource:
    derived_from: org.alien4cloud.kubernetes.api.types.volume.ArtifactVolumeBase
    description: |
      Adapts a Secret into a volume. The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
      More info: https://kubernetes.io/docs/concepts/configuration/secret/
    properties:
      volume_type:
        type: string
        default: secret
        constraints:
          - equal: secret
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.volumes.SecretVolumeSpec
        required: false

  org.alien4cloud.kubernetes.api.types.SecretFactory:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    description: |
      Component in charge of creating a secret using one or more files (from an artifact).
    properties:
      name:
        type: string
        description: |
          The name of the secret
        constraints:
          - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
    artifacts:
      - resources:
          type: tosca.artifacts.File
          file: README.md
    interfaces:
      Standard:
        create:
          inputs:
            SECRET_NAME: { get_property: [SELF, name] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_secret_create.sh
        delete:
          inputs:
            SECRET_NAME: { get_property: [SELF, name] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_secret_delete.sh

  org.alien4cloud.kubernetes.api.types.Service:
    derived_from: org.alien4cloud.kubernetes.api.types.AbstractService

  org.alien4cloud.kubernetes.api.types.IngressService:
    derived_from: org.alien4cloud.kubernetes.api.types.Service
    description: |
      This kind of service can be used of you want to expose your service using the Ingress controler.
      If tls_crt AND tls_key are set, the Ingress will be secured using a secret.
    properties:
      host:
        type: string
        description: |
          The dns name for the ingress.
        required: true
        constraints:
          - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      tls_crt:
        type: string
        description: |
          Optionnal base64 encoded certificate (if TLS need to be set for the ingress)
        required: false
      tls_key:
        type: string
        description: |
          Optionnal base64 encoded key (if TLS need to be set for the ingress)
        required: false

  org.alien4cloud.kubernetes.api.types.AbstractService:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.Base
    description: |
      Represent a kubernetes Service
    properties:
      service_name:
        type: string
        description: |
          Usually, the service name is generated by the plugin. If you need to define a static service name, you can define it using this property.
          253 characters and consist of lower case alphanumeric characters, -, and .
        required: false
        constraints:
          - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      apiVersion:
        type: string
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
        default: v1
        constraints:
          - equal: v1
      kind:
        type: string
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
        default: Service
        constraints:
          - equal: Service
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.ServiceSpec

  # Could define an AbstractCrontroller type, super-type for AbstractDeployment and for AbstractJob
  # [This could allow to choose between Job and Deployment when matching ContainerDeploymentUnit]
  # org.alien4cloud.kubernetes.api.types.AbstractDeployment:
  #  abstract: true
  #  derived_from: org.alien4cloud.kubernetes.api.types.Base
  # could define spec property here, type could be org.alien4cloud.kubernetes.api.datatypes.ControllerSpec
  #  properties:
  #    spec:
  #      type: org.alien4cloud.kubernetes.api.datatypes.ControllerSpec
  # in this case don't need to define spec property in AbstractDeployment and AbstractJobe

  org.alien4cloud.kubernetes.api.types.Deployment:
    derived_from: org.alien4cloud.kubernetes.api.types.AbstractDeployment

  org.alien4cloud.kubernetes.api.types.AbstractDeployment:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.Base
    description: >
      Represent a kubernetes Deployment
    capabilities:
      host: tosca.capabilities.Container.Docker
      scalable: tosca.capabilities.Scalable
    properties:
      apiVersion:
        type: string
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
        default: apps/v1beta1
        constraints:
          - equal: apps/v1beta1
      kind:
        type: string
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
        default: Deployment
        constraints:
          - equal: Deployment
      # Could remove this if we derive AbstractDeployment from AbstractController
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.DeploymentSpec

  org.alien4cloud.kubernetes.api.types.Job:
    derived_from: org.alien4cloud.kubernetes.api.types.AbstractJob

  org.alien4cloud.kubernetes.api.types.AbstractJob:
    abstract: true
    derived_from: org.alien4cloud.kubernetes.api.types.Base
    description: >
      Represent a kubernetes Job
    capabilities:
      host: tosca.capabilities.Container.Docker
    properties:
      apiVersion:
        type: string
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
        default: batch/v1
        constraints:
          - equal: batch/v1
      kind:
        type: string
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
        default: Job
        constraints:
          - equal: Job
      # Could remove this if we derive AbstractJob from AbstractController
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.JobSpec

  org.alien4cloud.kubernetes.api.types.HorizontalPodAutoscaler:
    derived_from: org.alien4cloud.kubernetes.api.types.Base
    description: |
      A kubernetes HorizontalPodAutoscaler object
      see https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#horizontalpodautoscaler-v2alpha1-autoscaling
    properties:
      apiVersion:
        type: string
        default: autoscaling/v2alpha1
        constraints:
          - equal: autoscaling/v2alpha1
      kind:
        type: string
        default: HorizontalPodAutoscaler
        constraints:
         - equal: HorizontalPodAutoscaler
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerSpec

  org.alien4cloud.kubernetes.api.types.Container:
    derived_from: org.alien4cloud.kubernetes.api.types.AbstractContainer

  org.alien4cloud.kubernetes.api.types.AbstractContainer:
    abstract: true
    derived_from: org.alien4cloud.extended.container.types.ContainerRuntime
    description: >
      Represent a kubernetes ContainerSpec.
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
      repository:
        type: string
        description: >
          This property can be specified to select from which repository the image will be pulled.
          The kubernetes image will be the concatenation of this property to the image property: {repository}/{image}
          Note that you may want to define imagePullSecrets references so kubernetes uses the right repository credentials. This property must be configured on the Deployment object.

  org.alien4cloud.kubernetes.api.types.BaseResource:
    abstract: true
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes final resource after node matching (Pod, ReplicaSet or Deployment)
    properties:
      namespace:
        type: string
        required: false
        description: |
          The namespace where the resource is deployed.
      resource_spec:
        type: string
        description: |
          The the JSON serialization (and eventually transformation) of initial node properties.
          This JSON can be used to instanciate the resource on the K8S cluster.
#    artifacts:
#      - deployment:
#          type: tosca.artifacts.File
#          file: kubernetes/deployment.yaml
#          description: A kubernetes file

  org.alien4cloud.kubernetes.api.types.DeploymentResource:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    properties:
      resource_id:
        type: string
        required: true
        description: |
          a unique id set by a4c to identify a resource. it should be added as a label named 'a4c_id'
      service_dependency_lookups:
        type: string
        required: false
        description: |
          A CSV key:value pairs where key should be replaced by the interpretation of value in the JSON.
          The value is the Kube name of the service for which the scheduler will need to find the ClusterIP and
          replace the key in the JSON with the found value.
    capabilities:
      # Manage scalability of instances
      scalable: org.alien4cloud.capabilities.ClusterController
    attributes:
      deployment_id: { get_operation_output: [SELF, Standard, create, KUBE_DEPLOYMENT_ID] }
    interfaces:
      Standard:
        create:
          inputs:
            KUBE_SERVICE_DEPENDENCIES: { get_property: [SELF, service_dependency_lookups] }
            KUBE_RESOURCE_DEPLOYMENT_CONFIG: { get_property: [SELF, resource_spec] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_deployment_create.sh
          description: |
            - filter variable in the artifact file
            - Deploy the deployment onto kubernets
            - Export some informations to expose it as attributes ?
        delete:
          inputs:
            KUBE_DEPLOYMENT_ID: { get_property: [SELF, resource_id] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_deployment_delete.sh
      org.alien4cloud.management.ClusterControl:
        scale:
          inputs:
            KUBE_DEPLOYMENT_ID: { get_attribute: [SELF, deployment_id] }
            NAMESPACE: { get_property: [SELF, namespace] }
            EXPECTED_INSTANCES:
              type: integer
            INSTANCES_DELTA:
              type: integer
          implementation: scripts/kubectl_deployment_scale.sh

  org.alien4cloud.kubernetes.api.types.BaseJobResource:
    abstract: true
    derived_from: org.alien4cloud.nodes.Job
    description: >
      Represent a Job kubernetes final resource after node matching
    properties:
      namespace:
        type: string
        required: false
        description: |
          The namespace where the resource is deployed.
      resource_spec:
        type: string
        description: |
          The the JSON serialization (and eventually transformation) of initial node properties.
          This JSON can be used to instanciate the resource on the K8S cluster.

  org.alien4cloud.kubernetes.api.types.JobResource:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseJobResource
    interfaces:
      tosca.interfaces.node.lifecycle.Runnable:
        run:
          inputs:
            KUBE_RESOURCE_JOB_CONFIG: { get_property: [SELF, resource_spec] }
          implementation: scripts/kubectl_job_run.sh
          description: Standard lifecycle run operation.

  org.alien4cloud.kubernetes.api.types.EndpointResource:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    properties:
      resource_id:
        type: string
        required: true
        description: |
          a unique id set by a4c to identify a resource. it should be added as a label named 'a4c_id'
      subsets:
        type: list
        required: true
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.EndpointSubsets
    attributes:
      spec_path: { get_operation_output: [SELF, Standard, create, KUBE_SPEC_PATH] }
    requirements:
      - endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: org.alien4cloud.kubernetes.api.relationships.K8SEndpointConnectToEndpoint
          occurrences: [1, 1]
    interfaces:
      Standard:
        create:
          inputs:
            KUBE_RESOURCE_CONFIG: { get_property: [SELF, resource_spec] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_endpoint_create.sh
        start:
          inputs:
            KUBE_RESOURCE_ID: { get_property: [SELF, resource_id] }
            KUBE_SPEC_PATH: { get_attribute: [SELF, spec_path] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_endpoint_start.sh
        delete:
          inputs:
            KUBE_RESOURCE_TYPE: endpoints
            KUBE_RESOURCE_ID: { get_attribute: [SELF, resource_id] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_resource_wrapper_uninstall.sh

  org.alien4cloud.kubernetes.api.types.ServiceResource:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    properties:
      service_name:
        type: string
        required: true
    attributes:
      ip_address: { get_operation_output: [SELF, Standard, create, IP_ADDRESS] }
      port: { get_operation_output: [SELF, Standard, create, PORT] }
      node_port: { get_operation_output: [SELF, Standard, create, NODE_PORT] }
    capabilities:
      cluster_endpoint:
        type: tosca.capabilities.Endpoint
    interfaces:
      Standard:
        create:
          input:
            KUBE_SERVICE_NAME: { get_property: [SELF, service_name] }
            KUBE_SERVICE_CONFIG: { get_property: [SELF, resource_spec] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_service_wrapper.sh
          description: |
            - Deploy the service onto kubernetes
            - Export the service ip_address and port to expose it as attributes
        delete:
          inputs:
            KUBE_SERVICE_NAME: { get_property: [SELF, service_name] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_service_wrapper_uninstall.sh

  org.alien4cloud.kubernetes.api.types.SimpleResource:
    derived_from: org.alien4cloud.kubernetes.api.types.BaseResource
    description: |
      A generic resource used to deploy any kind of resource on the kube cluster.
    properties:
      resource_type:
        type: string
        description: |
          The resource type known by K8S examples: pod,service,pv,pvc
        constraints:
          # for the moment managed types are: PersistenceVolumeClaim (pvc), HorizontalPodAutoscaler (hpa)
          # Cf. https://kubernetes.io/docs/reference/kubectl/overview/ section 'Resource types'
          - valid_values: [pvc, hpa, ing]
      resource_id:
        type: string
        required: true
        description: |
          a unique id set by a4c to identify a resource. it should be added as a label named 'a4c_id'
      json_path_expr:
        type: string
        required: false
        description: |
          the JSON path expression that will get the expected output to check resource avalaibility
      json_path_value:
        type: string
        required: false
        description: |
          the value excpected to obtain using the JSON path expression to check resource avalaibility
    interfaces:
      Standard:
        create:
          input:
            KUBE_RESOURCE_TYPE: { get_property: [SELF, resource_type] }
            KUBE_RESOURCE_ID: { get_property: [SELF, resource_id] }
            KUBE_RESOURCE_CONFIG: { get_property: [SELF, resource_spec] }
            KUBE_JSON_PATH_EXPR: { get_property: [SELF, json_path_expr] }
            KUBE_JSON_PATH_VALUE: { get_property: [SELF, json_path_value] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_resource_wrapper.sh
        delete:
          inputs:
            KUBE_RESOURCE_TYPE: { get_property: [SELF, resource_type] }
            KUBE_RESOURCE_ID: { get_property: [SELF, resource_id] }
            NAMESPACE: { get_property: [SELF, namespace] }
          implementation: scripts/kubectl_resource_wrapper_uninstall.sh

relationship_types:
  org.alien4cloud.kubernetes.api.relationships.K8SEndpointConnectToEndpoint:
    derived_from: tosca.relationships.ConnectsTo
    description: This type represents relationship between a K8S endpoint and an external endpoint.
    valid_target_types: [ tosca.capabilities.Endpoint ]
    interfaces:
      configure:
        pre_configure_source:
          implementation: scripts/kubectl_endpoint_join.sh
          inputs:
            KUBE_SPEC_PATH: { get_attribute: [SOURCE, spec_path] }
            TARGET_IP_ADDRESS: { get_attribute: [TARGET, ip_address] }

policy_types:
  org.alien4cloud.kubernetes.api.policies.AntiAffinityLabel:
    derived_from: org.alien4cloud.policies.AntiAffinity
    description: >
      c.f. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    metadata:
      # pluginId:pluginBean:phase
      a4c_policy_impl: alien4cloud-kubernetes-plugin:kubernetes-anti-affinity-modifier:post-node-match

    # properties:
    #   affinity:
    #     type: org.alien4cloud.kubernetes.api.datatypes.PodAntiAffinity

#
#-------------------------------------------------
# Kubernetes PODS sample with affinity
#-------------------------------------------------
#
# apiVersion: v1
# kind: Pod
# metadata:
#   name: with-pod-affinity
# spec:
#   affinity:
#     podAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#       - org.alien4cloud.kubernetes.api.datatypes.LabelSelector:
#           matchExpressions:
#           - key: security
#             operator: In
#             values:
#             - S1
#         topologyKey: failure-domain.beta.kubernetes.io/zone
#     podAntiAffinity:
#       preferredDuringSchedulingIgnoredDuringExecution:
#       - weight: 100
#         podAffinityTerm:
#           org.alien4cloud.kubernetes.api.datatypes.LabelSelector:
#             matchExpressions:
#             - key: security
#               operator: In
#               values:
#               - S2
#           topologyKey: kubernetes.io/hostname
#   containers:
#   - name: with-pod-affinity
#     image: gcr.io/google_containers/pause:2.0
#
  org.alien4cloud.kubernetes.api.policies.AutoscalingPolicy:
    derived_from: tosca.policies.Scaling
    description: >
      c.f. https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/
    properties:
      spec:
        type: org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerSpec


  org.alien4cloud.kubernetes.api.policies.NodeAffinityLabel:
    derived_from: org.alien4cloud.policies.LabelPlacement
    description: >
      c.f. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
    metadata:
      # pluginId:pluginBean:phase
      a4c_policy_impl: alien4cloud-kubernetes-plugin:kubernetes-node-affinity-modifier:post-node-match
    properties:
      matchExpressions:
        required: false
        type: list
        description: |
          matchExpressions is a list of node selector requirements. The requirements are ANDed.
          Note that the "labels" property value will be used mostly for matching the topology policy against this one.
          The value filled in this property will be the actual one in the final kubernetes blueprint.
        entry_schema:
          type: org.alien4cloud.kubernetes.api.datatypes.NodeSelectorRequirement
